---
usage: "make a docker-compose for a geth network from a base.yml and a node.yml"

options:
  compose_project:
    default: "ibft"
  networkid:
    default: "53456"
  netrestrict:
    # Use a different CIDR for each consensus type please. just bump the
    # 3rd digit
    default: 172.19.1.10/24
  gastarget:
    usage: "sets the --miner.gastarget option for the nodes"
    default: "18200000"
  gaslimit:
    usage: "sets the --miner.gaslimit option for the nodes"
    default: "18200000"
  recommit:
    usage: "sets the --miner.recommit option for the nodes"

  requesttimeout:
    usage: "geth --istanbul.requesttimeout option (milliseconds)"
    default: "10000"

  blockperiod:
    usage: "geth --istanbul.blockperiod option (seconds)"
    default: "1"


args:
  configdir:
    usage: >
      The config root directory.
run:
  - task:
      name: configure
      args:
        - ${configdir}
  - command:
      exec: |
        set -e

        TUSKDIR=$(pwd)

        CONFIGVARS="${configvars} compose_project networkid netrestrict gendoc_wallet"
        eval ${READ_CONFIG}
        if ${configshow}; then eval ${SHOW_CONFIG}; exit 0; fi
        cd ${launchdir} && cd ${configdir}
        CONFIGDIR=$(pwd)
        RECOMMIT="${recommit}"

        IBFT_CONSENSUS_OPTS=""
        [[ "${requesttimeout}" != "" ]] && IBFT_CONSENSUS_OPTS="${IBFT_CONSENSUS_OPTS} --istanbul.requesttimeout ${requesttimeout}"
        [[ "${requesttimeout}" != "" ]] && IBFT_CONSENSUS_OPTS="${IBFT_CONSENSUS_OPTS} --istanbul.blockperiod ${blockperiod}"

        ETHERBASE=${gendoc_wallet}
        [[ -z "${ETHERBASE}" ]] && ETHERBASE="0x0000000000000000000000000000000000000000"

        cat <<END > .env
        COMPOSE_PROJECT_NAME=${name}
        IBFT_CONSENSUS_OPTS=${IBFT_CONSENSUS_OPTS}
        NETWORKID=${networkid}
        NETRESTRICT=${netrestrict}
        ETHERBASE=${ETHERBASE}
        QUORUM_SRC=${quorum_src}
        NODESDIR=${nodesdir}
        GETH_IMAGE= ${geth_image}
        DELVE_IMAGE=${delve_image}
        GAS_OPTS="${RECOMMIT:+ --miner.recommit "${RECOMMIT}"} --miner.gastarget ${gastarget} --miner.gaslimit ${gaslimit}"
        END
        echo "Wrote .env"

        # Merge in the appropriate number of copies of node.yml to the
        # docker-compose.yml we are generating. As we do that add the
        # numeric suffices to each nodes service entry and the working_dir
        # it uses
        cp ${TUSKDIR}/compose/ibft/base.yml .
        cp ${TUSKDIR}/compose/ibft/node.yml .
        cp base.yml docker-compose.yml

        # each document fragment has to be valid. so they all need the
        # x-node-defaults anchor to be defined.
        cat <<END > tmp.yml
        x-node-defaults:
          &node-defaults
        END

        PORT=8300
        for i in $(seq 0 $((${maxnodes} - 1)))
        do
            VAL=$i EXPOSED="\"${PORT}:\"" yq eval '
              .node |= .working_dir += env(VAL) |
              del(.x-node-defaults) |
              .node.ports[0] |= . = env(EXPOSED) + . |
              with_entries(.key |= .  + env(VAL))
            ' node.yml
            PORT=$((PORT + 1))
        done >> tmp.yml
        yq eval-all --inplace '
            select(fileIndex == 0) * {"services": select(fileIndex == 1)}
            | del(.services.x-node-defaults)' docker-compose.yml tmp.yml
        echo "Wrote docker-compose.yml"
