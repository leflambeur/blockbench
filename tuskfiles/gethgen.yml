---
usage: "geth genral purpose genesis - keeps existing keys and so on"
options:
  sudo:
    type: bool
args:
  configdir:
    usage: >
      The config root directory.
run:
  - task:
      name: configure
      args:
        - ${configdir}
  - command:
      exec: |
        set -e

        TUSKDIR=$(pwd)

        CONFIGVARS="${configvars}"
        eval ${READ_CONFIG}
        if ${configshow}; then eval ${SHOW_CONFIG}; exit 0; fi
        cd ${launchdir} && cd ${configdir}

        CONFIGDIR=$(pwd)

        cp ${TUSKDIR}/compose/${BBENCH_CONSENSUS}/genesis-in.json .

        # To include extra data in genesis, save it in "gendoc_extra" in the
        # config file before invoking this command. gethgendoc will read it
        # from there
        pushd ${launchdir} # restore launchdir before recursive invoke
          tusk -qf ${thistusk} gethgendoc ${configdir} | tee ${BBENCH_NODESDIR}/genesis.json
        popd

        if ${BBENCH_K8S}; then
          echo "configured for k8s (geth init happens on deploy)"
          exit 0
        fi

        # clear out all the data dirs first to avoid mixed state if we fail
        # half way through
        ${sudo} && dosudo="sudo" || dosudo=""

        end=$((BBENCH_MAXNODES - 1))
        for i in $(seq 0 ${end}); do
          ${dosudo} rm -rf ${BBENCH_NODESDIR}/node$i/data
        done

        GETH_CMD="docker run --rm -u $(id -u):$(id -g) -v ${BBENCH_NODESDIR}:${BBENCH_NODESDIR} ${BBENCH_GETH_IMAGE} --nousb"
        case "${BBENCH_CONSENSUS}" in
          rrr)
            [ -n "${BBENCH_GETH_RRR_BIN}" ] && GETH_CMD="${BBENCH_GETH_RRR_BIN} --nousb"
            ls -la ${BBENCH_GETH_RRR_BIN}
            ;;
          *)
            [ -n "${BBENCH_GETH_BIN}" ] && GETH_CMD="${BBENCH_GETH_BIN} --nousb"
            ls -la ${BBENCH_GETH_BIN}
            ;;
        esac

        genesis_doc=$(pwd)/genesis.json
        for i in $(seq 0 ${end}); do
          /usr/local/bin/geth \
              --datadir=${BBENCH_NODESDIR}/node${i}/data  \
              --nodekey ${BBENCH_NODESDIR}/node${i}/key \
              init ${BBENCH_NODESDIR}/genesis.json
        done

        if [ -f ${BBENCH_NODESDIR}/static-nodes.json ]; then
          for i in $(seq 0 ${end})
          do
            mkdir -p ${BBENCH_NODESDIR}/node${i}/data/
            cp -v ${BBENCH_NODESDIR}/static-nodes.json ${BBENCH_NODESDIR}/node${i}/data/
          done
        fi
